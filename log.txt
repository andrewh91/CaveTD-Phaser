20241010
i tried littleJS and it seemed to lack multiple cameras, i looked up Phaser and think i'll have a go at this instead. 

as i found with the littleJS you need to run it from a server, vscode's live server should do, it explained that this is for  web browser security reasons.

so in vscode, using liveserver , which you need to download, you can use the file explorer in vscode to open your html file, you can also right click and click open in liveserver


you need to include the phaser library like so 

    <script src="//cdn.jsdelivr.net/npm/phaser@3.11.0/dist/phaser.js"></script>
	
although maybe you could bundle that with the game?

so i'll just go through the tutorials on the website
https://phaser.io/tutorials/making-your-first-phaser-3-game/part1

20241015
resume tut

20241119
make a start
somehow i was using an old version of phaser, updated it, i've made it load from my local version instead of from online
created a dot image, got that to display, next scale it

20241121
made the player dot larger, try to move it, got smooth moving, next try to get it to conform to a grid
20241122
movement for the player should be like pokemon, move one grid space with one direciton button, and you can hold it to move continuously.
in order to achieve this i have made a playerMoveTimer that decreases if above 0 and is set to a positive value (playerMoveTimerStep) when you move, you are only allowed to move when it is 0. it counts down with delta time, so if the game lags it should move the same speed - actually i should also multiply the movement distance by delta time too, cos if the game was really slow, like if the playerMoveTimerStep was lower than the game update time we would be moving less frequently, however moving more than one space at once would complicate the collision detection and you could pass through a wall, so just keep playerMoveTimerStep relatively high
this works good enough, 

20241125
i want to be able to create a new player character on command, created a player class, give new players a colour derived from the player's index number 
now i want to experiment with making new cameras, i already have some code that spaces the cameras out in the order i like, try and get that to work, seems to work, need to make the borders look right though 

20241126 
playing with these cameras again, took a while but i got it to display a border around each camera. this border is in a separate scene for the UI. next i should test what removing cameras does, will this mess everything up?

20241127
added code to remove the cameras one by one, except the first camera, then redraw the borders and manage the camera positions again, seems to work well. i've also used set scroll to have the new camera target the passed in coords, which is the newly created player. #

so far the arrow keys move the player, press p to create a new player at the current player's position, with their own camera, the camera points at the new player. press r to remove the most recent camera. 

the players all use the arrow keys to move, and they spawn on top of each other, so they all always overlap. new players should have their own movement keys instead, or at least have a key to toggle the selected player.

i've created a dialog box that appears when you create a new player, new cursor keys are then assigned to this new player, this works. currently it's just the wasd keys that are given to the new player, but i want them to be user defined

next i will create a bit more dialog, saying something like, set new player movement keys, LEFT: RIGHT: UP: DOWN 
then i need to take the user input for those events and have it set up the keys 

20241128
created the dialog box for new player, instruct user to assign keys to the player, figured out how to take the user entered key and store that as that new player's movement key

so now the p key will create a new player, and a camera centred on that player then manage the positions of the cameras and add borders, then it will show a ui dialog box prompting the user to enter keys for the new player, these keys update on the screen as you do so, and are then bound to that player, seems to work well 

next i should comment the code!

20241129
adding some comments to the code

20241205
i want to create a tile class and have an array of these to create the map. so far i have just created a load of random coloured tiles, i need to create a map, the tiles need to have a terrain value dictating if the player can traverse it etc

20241207
see if i can make the random colour a bit better, made a incrementColour function for use with the player and tile, just for now 

20241208
made a tileMap and a way to edit the tile map

20241210
amendment to the mapSetTerrain method. i will make some walls by default and have the player interact with them - the player should not be able to move onto a wall. nor should it be able to move out of bounds - out of the map, make sure its default pos is in the map, this seems to work , works for new players too

20241216
amend the player update method
i think i will try and make a 'vehicle' next, vehicles are basically players that can interact with the terrain, they can create /destroy walls. so now any player can press the 'action' button to create a wall, i'll have to modify this so only vehicles can do it, and also this is like god mode, that is not exactly how vehicles will interact with terrain in the game

20241218
made some player methods to draw text on the player, made it so the tiles can have terrain value for path rubble or wall, 
created a vehicle class, the player must move into this then press cancel button (shift) to enter if it is unoccupied, cancel to exit
had to amend the ui to allow adding the cancel button

I've realised that i want to see if the player is on top of a vehicle to see if they should enter when i press the shift key, i could loop through all the vehicles to see if the position matches the player position, which should not be too expensive since there will not be very many vehicles at once, however i could instead add a vehicle variable to the map, which is updated when the vehicle moves, this would be an advantage is there were loads of vehicles - which there won't be but i want to use the same method or similar for enemies and there will be lots of them, best to keep it consistent, also it makes sense that things on the map can be accessed by the player through the passed in map reference
TODO
so now i need to add a vehicle variable to the map, may as well do one for player too, need to make sure these are updated when a player moves or is destroyed 

i want to make it so if the player is in a vehicle and moves into rubble, it picks it up - the player and vehicle will move to where the rubble was, the rubble will appear on the bottom left of the player position but need to make it smaller or something to show we are carrying it, 
similarly if we bump into a wall, the wall will become 2 bits of rubble, one on the ground and one we are carrying 
while carrying rubble you can press space to switch from dig mode to dump mode, now if you press a direction you dump one rubble, if you dump it on an existing pile of rubble, you make a wall. I also want to be able to dump rubble on a wall to strengthen the wall, but i need a symbol for that so the player knows how strong the wall is, maybe outline the wall or something 

20241219
i can now move the player onto the vehicle and press shift, this puts the player in the vehicle, now when the player moves the vehicle moves too, press shift again to get out then the player can move and the vehicle will stay still, tested with a second player and a second vehicle
i learned something new about dynamic property access, i created a print method in the mapData class to help show a text representation of the various variables of mapData.tiles[]

TODO
players should not be able to occupy the same space as other players, ever. 
vehicles  should not be able to occupy the same space as other vehicles, ever. 
doing so would mess up the mapData.tiles[].playerIndex / vehicleIndex. 
players can occupy the same space as a vehicle but only if it is empty 

i also need to make the vehicle interact with the walls and rubble etc

20241220
i will make vehicles be able to display how much rubble they carry
i have now made the methods needed for the vehicle to drill walls and rubble, this seems to work. i now need to make the vehicle be able to drop rubble
you can't drop the rubble where you currently are, so the action (space) button will have to switch mode, so that now the movement keys control the direction you want to dump the rubble instead of moving, this seems to work fine
i've made it switch back to move mode if you dump all rubble

TODO
if you dump extra rubble on the wall, it functions as intended, makes the wall basically have more rubble, but it makes it white because i didn't support a value above 2, fix that also make it more obvious what is happening, make text pop up saying 'entered' when you get in a vehicle and 'exited' and 'dump mode' and 'move mode' etc

players should not be able to occupy the same space as other players, ever. 
vehicles  should not be able to occupy the same space as other vehicles, ever. 
doing so would mess up the mapData.tiles[].playerIndex / vehicleIndex. 
players can occupy the same space as a vehicle but only if it is empty

20241223
players should now not be able to move into each other, vehicles should not be able to move into each other 
you should not be able to dump rubble on players or vehicles

now i want to make text pop up, created this in the uiScene, it can be called by the scene, the player has the scene passed in, so the player can have the text popup appear, so far for when getting in or out of vehicle, when switching between dump mode and move mode, when trying to switch to dump mode but rubble capacity is 0, when trying to drill but rubble capacity is full. there is only one popup which disappear after 2 seconds, but it will be overwritten and reappear else where if it is triggered again, so if player 1 gets in a vehicle the popup will appear but then reappear by player 2 if they get in a vehicle

made it so that if you give a wall a terrain value over 2 it just becomes black- whether it is 3 or 3,000 it will be black , when i do some proper art it will be more obvious what that value is.

TODO
next i want to create an enemy class, and some basic pathfinding, should create a better, maze like map too

20241230
i should create a way to read in map data from a text string, such that the terrain data output by the mapData.print("terrain") method can be plugged in to generate a map. the map data from print method already has line breaks on the end of each line, so from that you can work out the map width that was used for the map

I can now have maps read in by passing a string in to this method MapData.loadFromText(string); the string could be something like this 
'00,02,00,00,00,00,00,01,01,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,02,\n00,00,00,00,00,02,02,02,00,00,00,00,00,00,02,00,00,00,00,00,00,00,00,00,00,00,02'
which is just the first 2 lines of an example map, 00 is path, 01 is rubble and 02 is wall, you can have values 3 and above, which is just stronger walls. the highest value in the print method - which prints a text representation of the map to console, the highest value is 99 since it only uses 2 digits - which is so that it prints neatly in the console. you could type in a value over 99 if you like and the loadFromText method would deal with it, but i don't think i want a wall with anywhere near 99 value

TODO make a maze, make an enemy 

20250107
making a creature class
made a map, made a class to store the maps, already have a method to load them in from text file, and i made a sort of god mode in the player class - which i've commented out, but that can help create a new map in the future using space and shift keys.
TODO spawn a create on the right of the map, create some pathfinding for it

20250110
the creature class will share some functions with the player class, i think i should create a separate helper class and have them import that
fixed an error, i had gridStep defined as global but also defined in the main file, deleted it from the main file

so now i have a creature on screen 
TODO give the creature pathfinding so it can move
TODO move more methods of the player class to the helper class

TODO i add vehicle, player and creature index to the map, i think my intention is to use that to get the creature in the given coords, but the creature's index in the creature array could change, so i think i want a map or something or do not remove dead creatures from the array, instead mark them as dead and given the next creature that old index

20250113
moving functions from player to helper 
pathfinding - there are a few problems with moving turn based actors in a tile based map when the actors are not able to occupy the same position, 
1 if there are 5 actors adjacent to each other in a row, and they all want to go east, if we do not move the eastern one first then the others can not move- at least in this update, which will cause a break in this continuous line which is not a big problem but it looks odd that actors all travelling the same direction can get in each other's way 
2 2 actors meeting head to head in a corridor will be stuck forever as they are unable to pass each other
3 a continuous row of actors moving east will not allow an actor moving south to get past until the entire row has moved out the way

pathfinding will determine the -proposed direction to move in- for each creature, that can be north, east, south, west or stationary. 
the index of creatures with the same proposed direction will be added to an array named for each cardinal direction and stationary 
each array will be sorted based on the creatures position, so for the north array (the array of creatures all travelling north) the first creature should be the northern most creature
these 5 arrays are given a priority that will change after each pathfinding cycle, for example it will start, north, south, east, west, stationary, then north will go to the back of the queue so south,east, west, stationary, north 
once all creatures have been sorted into these 5 arrays, we start moving them, in order of priority, so in this example the north array will be processed first this time
when trying to move a creature to it's proposed position, there are 3 things that could happen;
1 if the creature's proposed position is free of creatures and is not contested it moves into that position
2 else if the direction is blocked by a creature then that proposed position is marked as contested on the map, with reference to the direction we want to move, and we examine if our own position is contested, if so and it is contested by opposite direction to our proposed direction, then we can resolve this conflict by both moving to our proposed positions and we can clear that direction data from the contested map for both spaces. otherwise the position will remain contested until next time
3 else if the proposed direction is already contested, check if it is contested by your direction, if so move into it - this means we have already been prevented from moving this way last time, and now the conflict is resolved by the priority system, clear your proposed direction from the contested map

TODO 
implement a simple pathfinding rule to move in a straight line to a goal
then implement the above complex movement rules
test several pathfinding scenarios
1 2 actors meeting head on, they should be able to swap positions once they realise thhey are contesting each others' spaces
2 1 actor trying to move through a continuous line of actors travelling perpendicular, when the priority is right, the line should break to let the lone actor through
3 4 way intersection 4 lines of actors meeting at one point, things should slow down and take turns but everyone should get through eventually 
4 2 dotted lines, by that i mean not continuous but alternating space, actor,space, actor, 2 dotted lines meeting perpendicular - what will happen? will they neatly thread through each other or will it cause a slow down and more spaces to open up ? 
5 same as 4 but what if the dotted lines go actor , space, space, actor, space space

20250114
made 2 creatures , made them walk towards a goal, they should meet in the middle and get stuck on each other
also made collisions between creatures and - terrain, players, vehicles, other creatures
made 2 continuous rows of creatures, one going east one going west, you can notice how one moves normally as the the leader has no creature in it's way, and the other turns from contiuous to a sort of dotted line of creatures, as the leader is at the back and the other creatures are in it's way - this is because i am updating the creatures movement in order of the index number of the creatures, which is arbitrary, when i implement the priority array properly we will be updating the creatures that intend on moving east in order of the eastern most creature, so the others will not have a creature in their way

now i want to implement the more complex movement rules, like the priority arrays
i will create a priority array class, that we pass a reference of in to each creature, i've created methods to loop through the priority arrays and to change the priority, which seems to work ok

if i add an index of a creature, that wants to travel north, to the north array, then i want to sort the array, or more efficiently i want to insert the new index in the correct order. 
the correct order will be northern most creatures first, (for the north array) 
since the north array should be sorted from the previous update, i can make use of that to efficiently add creatures that still want to go north to the north array, creatures that were in a different array previously - east, west, stationary or south, but now want to go north will be more complex to insert into the north array

often times i will process the creatures that want to go north in an order that was already largely sorted in order of most northern, because creatures that are travelling north most likely will go north again, so assuming this is true more often than not, we should use an insert sort. 

so for example, i have a list of creature indexes that travelled north previously, i go through one by one, starting with the most northern, if it wants to go north again, i will add it to the now empty north array, the next one i add will be either equally northern to the ones already in the array or less northern, so i will check the last item in the north array, if this item is less northern than that (which it should be) then we add it to the end of the array, if not check the second to last item etc. until we find the correct place to insert it -  
this only works for the north array and only if it was already empty. the east, west and stationary arrays will be sorted in ways irrelevant to northern-ness, the south array will be ordered in the opposite way to the north array, with southern most creatures appearing first in the south array, so we could maybe process the north array and south array at the same time, the south array in reverse order

as for the east, west and stationary arrays, these will have to be sorted in a less efficient way

so far i have 2 actors, one in the east that wants to move west and one in the west that wants to move east, they meet in the middle and are stopped by each other
after pathfinding, they are added to priority arrays based on their intended direction of travel, at the end of the movement update these arrays are saved into an 'old' version of the array and the arrays are cleared 

TODO
instead of going through the array of creatures, in the order of their index numbers, i want to change it so that i go through based on the priority array, 
i think i need to add the relevant x or y coord as well as the index to the priority array, to aid sorting
i need to implement the sorting, if i do these correctly the 2 continuous rows of creatures should stay continuous

20250123
made some changes, when adding a creature we should add it to the priority array, even though it does not have a proposed position yet, just add it as stationary, 
then loop through all the priority arrays to make one large array , called concat array,  of the items in order, i've done slice to ensure this is by value
then in the update method i will loop through the concat array to do pathfinding
pathfinding is currently just moving towards a preset goal
because we are doing this in the priority array, the northernmost creature from last update will be the first one to be processed this time, and therefore we can implement an efficient sorting method as we can assume the array is largely already sorted
so each pathfinding update will insert the creature in the correct position in the priority array
once we have looped through all the creatures and updated pathfinding, they will have been added to different priority arrays, so concat all the priority arrays again
and then loop through the priority arrays to updatePosition

i need to test my addAndSort method in priorityArray to make sure it works and is efficient, especially considering how the priorityArray changes the order of priority

this seems to work as intended, so the 2 continuous lines of creatures now move without breaking up into a dotted line of creatures

TODO 
test out how this copes with 2 lines of creatures that collide with each other

20250124
if 2 lines of creatures move into each others path:
at 90 degree angle -which ever line got there first will go first and the other will be obsturcted and wait until it's clear,
at 90 degree angle -if there is a broken line of creatures, the obstructed line might take advantage of that gap and move into it, but only if the priority array lets them move before the other line
if they meet head on, 180 degree angle- they will be obstructed and stay that way 
4 creatures meet in a intersection, whichever has priority moves into it first and they all get stuck

so i want a more involved way to handle these conflicts that arise when multiple creatures want to move to the same space

here is how i previously described the contested idea working 
when trying to move a creature to its proposed position, there are 3 things that could happen;
1 if the creature's proposed position is free of creatures and is not contested it moves into that position
2 else if the direction is blocked by a creature then that proposed position is marked as contested on the map, with reference to the direction we want to move, and we examine if our own position is contested, if so and it is contested by opposite direction to our proposed direction, then we can resolve this conflict by both moving to our proposed positions and we can clear that direction data from the contested map for both spaces. otherwise the position will remain contested until next time
3 else if the proposed direction is already contested, check if it is contested by your direction, if so move into it - this means we have already been prevented from moving this way last time, and now the conflict is resolved by the priority system, clear your proposed direction from the contested map

so i'll start by adding a contested variable to the map, think i need 4 actually
if the creature tries to move to a space but there is a creature already there;
it will test if the current position is already contested by the opposite direction, if so that means the creature that is blocking us from getting to our proposed position - is being blocked from it's proposed position by us, so we can swap these 2 creatures to resolve the conflict
then we clear that contested data, in fact we clear the contested data for any map position that a creature moves into or dies in, i.e a space that is vacated 

that should solve head on collisions but i also want the contested method to allow a line of creatures to stop to let another creature past, 

this seems to work ok, 

TODO I think i solved the head on collisions, but i need to start the solution for when one line intersects another 
 - before moving check if a space is contested, if so that means a creature with higher priority has been trying to move there before you so you should wait

20250128
so i need to do the logic for if there is no creature in the proposed position, but it is contested- 
if it's contested by our direction then we can move, if it is contested by another direction then we should wait and that other creature will move instead, 
this should result in a congo line of creatures allowing creatures moving across the line to interrupt the line

i made a really messy method called isContestedExcluding 
i've been in 2 or 3 minds how to handle the contested logic, i ended up going for 4 booleans for each tile, but that doesn't lend itself particularly well to this method

this seems to work, and i think i've implemented it as designed, so if it doesn't work i think that will be back to the drawing board on the logic front. 

so that's a milestone, implemented the movement system for creatures, now i can implement more complex pathfinding and it should still work the same way

TODO try more complex pathfinding

20250203
currently, a timer ticks down then all pathfinding and movement is calculated in one go for all creatures, 
could i instead share the load, doing a fraction of the work but more frequently? 
i've amended the update method to work on the pathfinding and movement in segments, currently 8 segments, so the update occurs 8 times more often, but the first 4 times it just does a quarter of the pathfinding, then then next 4 times it does a quarter of the movements then it resets - i think this should be fine, so long as all the pathfinding occurs before any movement occurs it's basically operating the same as before, just spread out over time
one potential pitfall of this, is i count the number of creatures at the start of the update, and only count again after each update segment has finished, so i could get an index out of bounds error if a creature is killed - however i was already minded not to remove creatures from their array when killed - instead simply mark them as dead. creatures that are newly created mid update, will simply have to wait until they are included in the array

TODO pathfinding
20250204

pathfinding will return a proposedPos vector, then later the movement will try to move there, 
more advanced pathfinding methods can set and access the creature's memory, 
further pathfinding methods can leave markers on the map for all creatures to see

first i will create a map with a maze with a few different features that i think the creatures will have to overcome.
I'm not doing a*, as i'm not having the creatures be omniscient. the creatures will have to explore the maze, and also the maze is dynamic, the player and creatures can edit it, so you would have to recalc a* frequently anyway.
there will be different creatures with different pathfinding methods, some will be better suited to certain challenges. 
my maze should feature tight twisting paths, wide areas, islands, dead ends. 
a lot of the time the creatures will just be exploring or gathering resources, some of these pathfinding methods only really make sense if the creature knows where it wants to travel to, thematically the noise and vibrations of the player's headquarters will attract them 
now i have a maze, creature on bottom right using beeline method gets stuck on the first obstacle. 

so to make beeline better i will test which direction is closest to the goal, then i will inspect that direction, if that direction is a path then set that as the proposedPos, if not choose the next closest 
so beeline2 works better than beeline as it will try to move around an obstacle, but it will become stuck if it reaches a dead end, as it will move back and forth between the 2 spaces available to it that are closest to the goal

TODO next i can try to implement some memory, have the creature remember which way it came from, and avoid moving there unless it's the only option, this will help the beeline2 moving back and forth, but probably only in a tight corridor, as now instead of moving back and forth it will just loop in a circle if it has enough space- but in a tight corridor it should do better than beeline2

after that try a wall rider

20250206
pathfinding, now i will have the creature remember its 'tail' or the space it came from 
this works, although in my map the creature does still get stuck , it gets to a dead end and goes back on its tail, it can then either move south or east, it goes east, which is the way it have previously came from it ends up in another dead end and comes back to the first dead end and run repeats, but at least it is going back and forth over several tiles rather than just flicking between one tile and another

to try and help the above, perhaps i can create landmarks, these are placed on the map by a creature for all creatures to see, warning them not to go in that direction. if you travel back on your own tail that means you hit a dead end. a simplified version of this landmark system can be to place a 'deadend' landmark any time you have to travel to your own tail, place it on your position and now that dead end is one tile shorter. if numerous creatures enter a long corridor that is a dead end, they will eventually fill it up with dead ends, and no creatures will bother going that way anymore. a creature will decide to travel over its own tail when the 3 other directions were not viable, that can be because they are paths, or dead ends, if the creature turned back because it was a dead end landmark, and it wants to make it's own landmark, then delete the one we encoutnered as we have set a more recent one - this doesn't really work, first of all, different creatures might be looking for different things, so it might not be a deadend to one creature, it might be exactly where it was trying to go. also if at the end of a long deadend corridor, there is space to turn around then it would not be marked as a dead end. 

todo i should resume with my plan to do a wall rider
i need to think about the distinction between creatures that are exploring and creatures who are trying to reach a defined goal position, these creatures should navigate in different ways. landmarks could be useful, but only at intersections - at a cross roads these landmarks or signposts could be useful

20250210
pathfinding wall runnner
the wall runner will store the positon of the wall it has stuck to in memory, it will try to move towards the recorded position of the wall if it is now a path, else it will move to the left or right of the wall depending on this creature's preselected preference for left or right direction. in the move method i will need to set the memory to where the wall is. if there is no wall it just uses beeline2

if the creature hits a wall i record the wall in the move method, i also need to update it if we already encountered a wall and are moving along it, so in teh moveCreature method if the rememberWall bool is true and we already have a memory then update the wall, i have not tested any of this yet

need to fix the updateMemory method for when it goes around a corner, it sets the wall to like -50 or something 

20250211
fixed the wallRunner4 method, it will now beeline1 until it hits a wall, then it uses it's memory to store the position of the wall, and moves to the left or right (depending on this creature's saved direction preference) then continuously keeps track of the wall it is attached to - even around corners. such that if it hits an island it will never leave it. 

an upgrade to this method would be to break from the wall in some circumstances, like if we have revisted the place we entered the wall originally

20250220
If creature changes direction, set a flag for potentialShortcut mode. Record the position, every time it moves, for the next (n) times, test the distance to that recorded point and store in the creature's memory array. If the distance is greater than last time keep going. If the distance is smaller then there is potential to dig a short cut. If the distance is smaller than the previous distance (x) times in a row then we will decide to dig a short cut, but let's wait until the distance is larger than the previous distance before we start. When we do start, then set that recorded position as the goal, and set a tunnel flag so we make a beeline to that position, digging through rock as necessary. 
The (n) and (x) values should scale with the amount of rubble this creature can carry at any one time.

when a creature digs it will remove 1 value from that terrain, turning wall to rubble or rubble to path,for now i will just alter the value, but that would mean the material disappeared, i want it to be towed behind the creature instead in a trailer, each trailer can carry 2 material, so if the creature dies that material lands there and will be a wall or rubble in that position

so my wall runner now needs to store the position of the wall as well as the direction it previously travelled in
which means i need a better way to store the memory, or at least several memory arrays

i don't know why i didn't do this already, but swapCreatureWith should use the moveCreature method, i just need to make sure it does not overwrite the map's creature index at the previous position

so now in the updateMemory method i can record the previous direction travelled in
if the direction changes then set potentialShortcutMode to true. 
if potentialShortcutMode is true, record the distance to the potentialTunnelStartPos
if the creature moves closer to the potentialTunnelStartPos, then set a flag, now while that flag is true - if we move further away from the potentialTunnelStartPos we have found the end of our tunnel, now we can dig from here to the potentialTunnelStartPos. the way to go about that is probably cancel the current move, set some flag to allow digging, then set the goal and run pathfinding again

the wallRunner4 seems to have trouble with tiles that are out of bounds
just make a wall around the whole map, 
TODO, make the wall on the edge of the map indestructible 

need to test this, doesn't seem to work correctly, the cancel move does not seem to work, so we move one space away from the tunnel finish position before digging, seem to be moving diagonally also

it seems that i should be checking the distance between the proposed position and teh tunnel start instead of the current position

and i think i should clear the memory of the wall 

i was assuming changing direction meant we hit a wall, but for the wall runner you might just be going around a corner, so this is falsely thinking that is a tunnelstart, i was trying to avoid this but i guess i'll have to flag in the pathfinding method that we have changed direiton due to encountering a wall

this seems to be working now, i will now have the creature turn walls into paths as it travels over them, make sure that works then...
TODO figure out a way to have excavated walls and rubble be towed by the creature
actually the creature can behave quite weirdly, especially if it was moving away from the goal when it started the tunnel, as once it's dug back to the original position, it will then attempt to move towards the goal, and therefore not necessarily in the same direction as it was moving when it got distracted with digging. tbf wall runners should not really have a goal, they should be exploring, maybe instead of a goal they should use a random direction, they only follow the goal when they have no wall to cling to 

so yeah, next up i want to tow material behind the creature 

20250221
i've drawn a coloured sprite on the proposedPos location and the tunnel start position, 
the creature is continuously starting a tunnel in the same location, this is just due to my map, and where i set the goal
PROBLEMUNNESSARYTUNNELS: the creature sometimes set a tunnel then travels unimpeded in a straight line hits a lump, goes around the lump, then tunnels through the lump, but then also all the way back to the tunnel start pos, even though it's no longer digging - i will give the wall runner creature a limit to how many times it can move in potentialShortcutMode before it cancels, i should also allow it to keep track of multiple tunnel start positions

i will create a whole potential tunnel class, it has its own position, own sprite, own distance to the originating creature 
this will help me to have more than one potential tunnel, and if i sort them in order of distance to originating creature, the that should solve PROBLEMUNNESSARYTUNNELS

reasonably happy with this, i need to sort out the out of bounds, amended translatePosToMapPos in the helper class 

TODO so i didn't actually get around to my todo , next i want to have the creature carry material that it digs with it, it will deposit 1 material on any path it sees, i will have to change things so that creatures can travel on rubble, albeit more slowly. this creature should dig on walls only, in one turn it will turn a wall into rubble, and start towing rubble in its trailer, if it is ever adjacent to a path it will dump 1 rubble there, the trailer can carry a max of 2 rubble, the creature can have a max of 1 trailer, if there is no space on the trailer it cannot dig. if the creature dies the trailer will dump the material, so that will become rubble or a wall 

20250225
first of all make it so that the creature can walk on rubble, rubble should slow you down, so add a flag called skipMovement
altered the pathfinding to check for isWall == false instead of isPath == true, now update the movement to only dig if there is a wall, , that will lower a wall into rubble,
now i will have that rubble be carried in a trailer behind the creature, i will make a trailer class

i've realised that if you carry a trailer of rubble over more rubble, then kill that creature the rubble could drop ontop of the other rubble to make a wall, meaning that if we carried 2 rubble that would make a level 3 wall which i want to avoid 

i've created trailer class, it can call a method of the scene class which will drop the rubble, for example when the creature is killed, or when the creature wants to deposit the rubble 

the trailer is scaling weird, it's like anti aliased or something, you can change the main scene config to use pixelArt but that makes the text look worse, but i could just try and get a different font 

ok so now my creature can walk on rubble, can dig walls, and carry them in a series of trailers behind it. the trailers will drop the rubble when killed which will turn path to rubble or turn rubble to wall. also the creature can choose to drop the rubble at its location, through testing this i've noticed that the kill method of the creature needs updating 

20250303
this creature should dump rubble as soon as it can, done that. 

20250304
I have one wallrunner method that will explore, it won't get stuck on islands because it can dig, but if i wanted to make a creature that wall runs but can't dig i could use this;
record the position that it first encounters a wall
then record the distance to the goal, if this distance is shorter than the previous recorded distance, then overwrite that
if we revisit the wall entry point, then set a flag saying we can break from the wall, 
now while the break from wall flag is true, if we revist a position that is equal or less than the shortest point to goal then break from the wall and beeline to the goal 

I have some ideas for how creatures should behave. Creatures should try to gather resources. they need to locate them, find an efficient route to them, collect them and defend the route.
Locator, this creature should travel some distance from the nest, then pause to sort of sniff out resources, this will reveal all resources in a given radius to the creature, but not the terrain. then i should send a wall runner directly to it, i don't think i should use the digger one, just a normal wall runner which will either find a route to the resource or could record the closest point to the resource, perhaps then a different creature could dig a straight shot to it. then one the first resource has been gathered, draw a path back to the base, other creatures will then build up the wall around this path, and post guards along its length

TODO 
update the kill method of the creature 

20250305
I need to think about how i want the creatures to act. 
creatures start at a base. 
the base produces creatures, but requires resources.
it might create different creatures depending on various factors. 
it can send out creatures that explore for resources. 
creatures will explore until they find a resource then set their goal as the base to deliver the resource. 
terrain can be path, rubble or wall. walls can have gemstones. 
the resource needed for a creature should be at least one rubble, and one gemstone. this means larger creatures require more rubble but just one gem.
the creatures should have a finite lifespan, a set amount of time before they die, this is important, the base can create more creatures, but i don't want a situation where there is a potentially infinite number of creatures, and i don't want the base to magically know when a creature dies so that it can make a new one. so the idea is the base keeps track of when it last saw each creature, if it's been too long since it saw it, it must be dead, if it was killed by the player then the base still waits until it would have died of old age. if the creature revisits the base, then it's life is extended. also when the creatures die they drop their gem, if that is returned to the base, then the base knows the creature died. perhaps when a creature is born, it is assigned a cardinal direction, this way when it dies we can know which direction it initially went and therfore where to send the back up units to investigate. 
also the base can only create new creatures if it has enough gems and rubble, so it needs to keep a store of these, these should be guarded too
creatures will pathfind in different ways and will have different abilities. 
if a creature returns to base with low health - it has been attacked, so the base should create some stronger creatures which follow it back to where it was attacked and look for the threat

exploring:
the base can send various types of creatures which pathfind differently. send in each cardinal direction 
wallrunners, which i've largely already coded, with and without digging ability 
signposters, these guys are good for exploring corridor mazes with lots of branching paths, they will leave signposts on the terrain which can be read by others, so when they reach a fork they can say, i went left, so the next one that reaches the fork can go right. if the creature doubles back to the fork it can say it was a dead end. 
I also want to make one that pauses to scan a radius of its surroundings, then use the knowledge to navigate

if a signposter goes down a narrow corridor which is a dead end it will know that is a dead end, as it will reach the end. but if it goes down a narrow corridor that opens up into a large cavity, then it will not know that is a dead end. it will know that it reached the end of a corridor, maybe at that point it could become a wall runner, and explore the cavity, it should mark the point it exited the corridor and its timer at that time, so that if it returns to the start point of the cavity it can record how large the cavity is based on the difference between current time and that recorded time. we have only gone around the edge of this cavity so maybe now we should try to explore the interior of the cavity, perhaps a unit can be brought in that can methodically cover every tile, or a unit that can send out a pulse that slowly builds up a picture of the cavity, to see if there are any walls there. 

pheremones, i could add a counter for each cardinal direction to each tile, everytime a creature travels that direction increase the counter by one. if we see lots of creatures travelling on a path, but none coming back the other way, maybe they should send stronger units to check it out, as they may be getting killed by enemies, or they may be starving to death, or they may just be circling round

ok new idea. 
a base. sends out creatures. 
there are 8 directions to send creatures in, these creatures will be colour coded. 
compass colour
north   red
ne      orange
east    yellow
se      cyan
south   blue
sw      dark blue
west    purple
nw      magenta

the creatures will be signposters, if they hit something, they change direction to get around that object and signpost that, if another creature, of the same compass colour hits the same object, it will check the sign, and choose the other option to navigate around the object. 
the creatures will carry a resource back to base if it finds one. the creatures have a lifespan, so around the mid way point they will head back to base to renew their lifspan. if a creature encounters a dead end corridor it will mark the start of that corridor as a dead end. if a creature encounters dead end signpost it will not travel that way. 
if a creature returns to base early because all the avenues are dead ends, the base might create a new type of creature to reshape the map, this new creature will choose to travel down dead ends, changing that dead end sign to a tunnel sign, and it will dig at the end of the dead end, now regular creatures will see a tunnel sign and go down it, picking up any rubble and carrying it up the tunnel out of the way.
there needs to be an alternative reason to create digging units, as regular creatures can be tricked into not realising a nonnarrow corridor is a dead end, maybe just if a creature reports to base that it used a deadend. i also want the compass coloured creatures to sort of be incentived to stay in their compass section  


creatures are made out of gems and rubble. will drop both if they die. 

20250310
before i do the signposters, i want to do explorers. 
explorers will be given an initial goal direction to explore similar to the signposters, one of 8 directions. the explorer will examine the 4 adjacent tiles in the map data and make an array of unexplored tiles, it will pick one of these tiles with a preference for one that is the goal direction. once it moves it sets that tile as explored using an incrementing number, so long as that tile was not already explroed.  
if an explorer finds a resource it picks it up, now it should try and follow the explored tiles back again, it will examine the 4 adjacent tiles, and their explored number, it will pick the lowest explored number. it sets the location of the resource with a resource origin marker, now every tile it moves into it will mark with a resource marker pheremone. the creature should follow the same path back to the base as it took to the resource, if not similar but taking a shortcut if it ended up backtracking a bit. 
if there are 2 explorers they might confuse each other a bit as they would not know who placed the explored number, but i don't think this would matter, if the creature is returning to base an finds a lower explored number it should take that path instead, so i think this might work quite well. if we are returning to base and there is no adjacent tile with a explored path number lower than the one we are already on, then maybe the map was edited, we should instead go to an unexplored path- prioritising the goal direction (the base), or an explored path with the second to highest number -if so set a marker to say we are backtracking - this to prevent us just going back and forth in the deadend. when this marker is active we should be prioritising an unexplored path, then a second highest explored path number 

20250312
making the explorer creature, 
i need to make an explored map, this will either be 0 for unexplored, or an explored number, additionally it can have a resource marker bool
explored numbers will increase with each update the creature is alive, so as a general rule low numbers will be near the base, high numbers move away from the base
pathfinding pseudo code is ;
when we pick up a resource, delete the memory of our tail 

if we are carrying a resource, 
return a list of any adjacent tiles that have a resource marker, set the proposed move to the one that has the lowest explore number so long as it is not our 'tail', if it is our tail set the proposed move as the next lowest resource marker. if we have a proposed move, then break out of this. 
if we still have no proposed move then return list of adjacent tiles that are explored, set proposed move to the one with the lowest explore number , if so break , otherwise return a list of the adjacent tiles that are unexplored, select the one in the opposite direction to the explorer direction. 

if we are not carrying a resource.
return a list of adjacent tiles that have a resource marker, set the proposed move to the one that has the highest explore number, if we do that then break. 
if not then return a list of adjacent tiles that are unexplored, set the porposed move to one , giving priority to the explore direction, if we find one then break, if not... 
return a list of explored tiles, choose the one that has the highest explore number

20250314
i've set up the tiles class with resource marker and exploredNumber, 
now i want to create a method in creature class to return the 4 adjacent tiles, i need the method to return just resourceMarker tiles, just unexplored tiles, and just explored tiles, and i need them to be returned with our explorerDirection as the first tile in the array 
i've made quite a complcated method of setting up the direction and getting the adjacent tiles, but they should be returned in a useful order, returned in order of general direction to the explorerDirection. 

now that i have these neighbours, i would need to test for walls etc 

20250318
made the edge of the map all impassable terrain

i've done part of the pathfinding for the explorer creature, need to do the logic for when it does not have a resource. i also need to do the move method, as it will need to update the exploredNumber of the tile etc 

20250321
completed the logic for the the explorer creature when it does not have a resource, now i need to update the tiles as it moves

i should make a resource, once i add the resources to the map i should flag the tile.resourceMarker to be true, that way if an explorer is adjacent to it, it will move towards it, i also need to set the resource flag of the creature, and delete it's tail so that i return to base with the resource and lays resource markers as it goes

creating a resource class, it needs an index, the index will be stored on the mapData, when it is created i should mark it as a resource flag
when the creature reaches a resource, it should change carrying resource flag to true, reduce the resource health by 1, resource will disappear if reduced to 0, now that the creature is carrying a resource, it sets a resource marker everytime it moves, 

i also need to make a base which is where the creature should take the resource, so that will reset the carrying resource flag to false, it will reset the creature's exploredNumber



if this creature reaches a dead end it will be stuck, it will have a preference for high exploredNumber tiles, and so will head back to the dead end once it leaves it. so maybe i should detect a dead end, and then decide to return to base, so prefer low explored numbers, then start again, it will look for resource markers first, then unexplored tiles, so it should take a different route. 

i think we could detect a dead end if we go to an explored tile that is our tail, in which case set the dead end flag and start looking for the lower explored number tiles, or unexplored tiles

TODO i need to either manage the resource array similar to how i manage the creature array, so that if i kill one it won't mess with how i use the index to access the array, or maybe i can just not kill them, and if i create a new resource, check if there is already a resource on that tile 

TODO if we reach the base in the moveCreature method we should set 
this.exploredDeadEnd=false; 

TODO if we follow a resource marker but then the resource is depleted i need a way to remove that marker, but tht might have the side effect of deleting the marker for another resource that was using path of the same path

20250327
i will create a base class, and a new map 

vehicles and players will prevent creatures from moving, so in a way they will act as walls, the creature might attack in this instance, but maybe some creatures will not attack the player, so i will need to treat it as a wall

the creatureBase will produce creatures periodically

I want to draw the explorerNumber to each tile

i need to test the explored movement, so instead of having random initial directions i will make it a fixed order 

during testing i started to add creatures dynamically, sometimes they would not update, i think this is because i was adding them at the wrong time. during the update, the priority array gets cleared, so the contents of it could be lost if added at the wrong time. so i will edit the addCreature method to add them to a waiting room, then at the correct time in the update, the waiting room is emptied into the priority array

also i should only create a creature if there is not already a creature on that space 

ok so today i have created the creatureBase, 
i've created a creature waiting room, so that creatures can be added dynamically, i've made the explored number print to each tile, which will help me test the explorer7 pathfinding, which i should do next. i should add some more resources to test all the logic

20250402
adding a debugging feature, for each camera, i am drawing to screen the x and y gird pos of the tile that the mouse is over
next i really ought to change the way i store the x and y of the tiles etc
currently the tile is set up with a real world position, which is like -mapOffset +gridStep*5
instead i should just store the position as 5 and apply the offset etc when drawing it 

20250404
there is a gridstep which is how wide the tile is in world coords, there are world coords, camera coords, and tile coords, tile coords are analogous to the position of the tile in the map , most of my classes inherit from the sprite class, the x and y coords of the class mean it will be drawn at that position in world coords, so in order for me to have the tiles be drawn at the tile coords, i would need to convert the tile coords to x and y every update, or i can maintain both tile coords and world coords, and make sure to change both at the same time 

i'll start with the player, so i will give it a tx and ty to denote the tile position, every time the x is set or moved also update the tx and ty 

this seems like a worthwhile idea so far, i've been able to remove so many helper.translatePosToMapPos method calls
made a new helper function called translateTilePosToWorldPos, which should be used much less than the other translate function

some things should still use the x rather than tx, like the popup text when the vehicle is entered, that should appear based on the world x position of the player

i think i finished updating it for the player, try the creature next

so i've got rid of a lot of calls to Helper.vectorMultiply, as i was only multipying a vector by gridstep, but now i can just use 1 instead of gridstep so obviously there is no point multipying by 1 

DONE resume going through the code refactoring a lot of the .x and .y to .tx and .ty, replacing gridstep with 1 where needed, removing helper functions that are not needed
classes done
finished with creature
start with the helper class - done 
creatureBase - done
main  
mapData - resume from dump rubble onwards
potentialTunnel
priorityArray 
resource
savedMaps
splitscreen
tile
trailer
uiScene
vehilce
classes left to process:
all done

after a bit of testing this seems ok, 
TODO 
i need to further test, vehicles, rubble, creatures pathfinding

next i'll have the camera move, it should follow the player that the camera is tied to, but if that move would only show more blank space - outside the map, then it should not 

20250408
now that i add the creatures to a waiting room, i can no longer set their goal immediately afterwards, 
i've made it so that i pass in the goal as well, if it has a goal it will be given the goal data when the waiting room is process, 

fixed some glitches with the creatures relating to the new tx and ty 
vechilce seems to work ok, 
there is a problem with the vehicles, you can dig rubble or wall and carry 3 rubble, you can add 3 rubble to a path to make, rubble, then a wall, then impassable terrain. but then you cannot dig impassable terrain, so i don't think you should be able to add more rubble on top of a wall
made it so that player cannot dump or move on creatures or creature bases

TODO
test out the other creature pathfinding 
i still need to test the explorer pathfinding for when they encounter resources 

20250411
the different pathfinding methods require some bools to be set in different ways. to avoid me making a mistake setting the correct bools for the chosen pathfinding method, i've set up a function to do this for me, which also allows me to change the pathfinding method on the fly in game. 

tested the beeline1 pathfinding with a blank map and the setupcreatures method that sets a lot of creatures on collision courses with each other, fixed some problems that arose. 
testing beeline2, i noticed that once they reach their goal, they wander off to the top of the screen, turns out this was because in the updateMemory method, there is a part taht sets the goal to the oldGoal, which by default is undefined, this code was intended only for the pathfinding that tunnels, so i made an if statement to only run that for tunnelling creatures.
testing tail3 seems to work as intended
testing wallRunner4 works as intended
testing wallRunnerDigger5 i which included beelineDigger6 -  this is setting tunnels, but never ends up digging, there are a typo when calculating the distance to teh tunnel from the creature, it was x instead of tx
the trailers were being created at the wrong positions, fixed that, but they still seem to be being destroyed at the wrong position, and don't follow the creature, fixed that
i've noticed i've done the kil ltrialer method wrong, it kills the last trailer, it should kill the most recent one instead, fixed that 
next i will test explorer7

20250414
testing explorer7
if the creatures are surrounded by explored tiles, it will go back and forth endlessly, turned out i forgot to set rememberTail to true for explorer7

if it crosses a rubble patch, the alternating direction will alternate twice because i basically skip a turn 

the creture goes back and forth when it hits a resource, this is because the resource tile is not being marked as explored
second problem:
i found another problem,, it turns out the explorer number was always being updated, although my comments did say it should only be updated if the explored number is lower than the existing one, there was an error that meant it was always updated. 

if it is always updated, then if the creature hits a dead end it can move to the lowest adjacent explored number to backtrack, if it is not always updated then it would just go back and forth 

wereas if you only update it when the explored number is lower than the recorded explored number then we will create an efficient path back to the start point. 

when carrying a resource, it looked for neighbours with resource markers and moved to it if it WAS the tail, it was supposed to be if it was NOT the tail , fixed that 

another error: when carrying a resource it finds teh resource marker with the lowest explored number, that is a not the tail, and if it does not go there for whatever reason, it then goes there anyway... the comment explained that it must be unexplored, but that is wrong it could be explored but nobody has put a resource marker on it yet, so i deleted that. i assume that was why it went back and forth repeatedly

i think i understand the second problem now, once we are carrying a resource, we don't want to update our explored number on the way back to the base because that would make it higher, and we are following the lowest path back, so the next creature is not going to want to go the same way 

so i need to make sure not to update the explored number on the way back?
i've made a new bool exploringWhileCarrying, this will be set to true if we propose to go to an unexplored tile when carrying a resource. 

i've changed it so that we record our explored number so long as we are NOT carryingResource OR if exploringWhileCarrying is true. 

if i'm not following a resource trail, i should only go to an explored location if it is less than my current explored number, otherwise we should explore

i think i might have fixed it, i will create a way for the creature to drop the resource off at the creature base
at the end of movement, check if carryingResource, check if adjacent to creatureBase

if the creature is returning to the base with a resource, and it cannot follow the exploredNumber trail it will look for an unexplored tile, if it moves there, then it will move back to where it was next time as that explored number would be lower than our current one, so we need to prevent moving on our tail here too 

i think i need to set the explored number of a creature's initial position to 0 if it is -1 
also reset the creature's explored number when it reaches the base

ok i think this works now, next time, set up several creatures to spawn at the creature base, set up several resources, see how well it does

250415
it seems the contested tiles are not working as intended, i think when rubble is involved, in which case it might be to do with the skipMovement...?

creature 1 is on rubble, pathfinding says to go south into more rubble -  at the time it was an empty space, but by the time creature 1 gets to move creature 2 is already to the south of it so creature 1 sets it as contested south. if the creature 1 pathfinding tells it to go south again, then creature 1 could move into the contested space - because it is contested by its direction, and that would clear the contested flag, but because it is a diagonally moving creature, it changes its mind and does not go south, it moves away instead, leaving that position as contested south, because it is still contested, the creature 2 comes around and wants to move there from the east, but it can not as it is still contested south. 
so i think it's less to do with rubble and more to do with a creature changing its pathfinding. but even if it did not change its pathfinding, imagine if that creature was killed before it was able to move south, that would remain contested south. 
so i need to either wipe all contested data periodically, or when a creature proposes pathfinding or is killed, i should examine what its old proposed direction was and clear it

so before we propose new pathfinding, record the old pathfinding, if the new pathfinding proposes a new position, we  need to clear the old pathfinding's proposed position contested data from that old proposed direction . 

similarly for when it dies, we should clear the contested data for the proposedPos and the old proposedPos

that did fix my problem with creature 1 and creature 2 

the next problem is i have lots of creatures in a bottle neck and only one of them seems to be moving. 

if a tile is contested from north and east, and the tile is empty, the creatures do not move into it. i thought the idea was that if it is contested from your direction, then you can move into it if it's empty, and the priority array will make sure that every creature gets a fair chance to move first 

so i think i have some faulty logic in the move method, the comment says to not move to an empty tile if it is contested, but we can still move there if it is contested by our direction , 
but the isContestedExcluding method does not do that, it's doing the opposite, 
for clarity if a tile is contestedNorth, that should mean that a creature to its north, wants to move there, the direction that creature wants to move, is south, so its a bit confusing, i should rename it contestedFromNorth

rather than change that method i've changed the code where i set a contested flag, i've changed it to use the opposite direction 

i've renamed some of the methods like setContested, to setContestedFrom 

i might need to set contestedFrom if the tile is just contested from a direction, even if it is empty 

the //we take the map coord and the direction a creature is intending to travel into that map coord from, this will return true if that coord is already contested from the opposite direction and false otherwise isContestedFromOpposite method is not needed now 

i've made a new testing feature, press 'c' to advance the creature pathfinding and movement update. 
added some info to the ui for testing purposes 

there is a problem when collecting resources, i have many creatures, they all travel a short distance to one resource and ferry that back to the base, eventually they are remaing static apart from 2 which switch position adjacent to the base. the pathfinding is telling them to follow the path marked by resourceMarker and of the tile with a resourceMarker it should go to the one with the highest explored number, which makes sense as following the highest explored number should take us away from the creature base and towards the resource. however the creature moves back and forth as the 2 available resourceMarker tiles have the same explored number. 

the explored number on the tile is altered by any creature that moves there that is 'exploring' that means it is not carryingResource or if it is, it has decided to move to an unexplored tile. i did originally only want to update the explored number on the tile if the creature had a lower number than the existing one, but i changed that for some reason - which i think was to do with the behaviour when exploring deadends ?

well changing it so that it only does setExploredNumber if the new number is lower seems to give better behaviour, but i'd have to test it in more complex situations too. 

once the resource has run out of its 10 resources, the creatures get stuck in a loop, if a creature gets to a resource and takes the last one back to the base it should delete the resourceMarkers as it goes.

so set the resourceDepleted flag, if true delete any resource marker you travel on until you travel on a tile that has no resource marker then set it to false

this has a downside, if we travel to a resource, take the last one and make our way back to the base we will be deleting th resourcemarkers until there is a break in the resource trail, if that break comes mid way through the trail - which could happen- then we only delete half the trail, and that half a trail will stick around forever, misdirecting many creatures, 

perhaps instead of the resource marker being a bool, it should be a value, equal to the amount of resources the creature found at the resource location, then any creature that follows the trail hoping to arrive at the resource can decrement it as it goes, so if there is only 3 resources left and 3 creatures go to follow the trail, the 4th won't bother as it will assume the other creatures will handle it . however that info wil not be for certain, those creatures could have been killed on the way there, a creature coming back with a resource could leave a marker with more certainty

TODO 
i have changed the way the setExploredNumber works, i now only do it if the new number would be lower than the exisitng number for that tile. test this 

i want to change the resourceMarker into an int equal to the amount of resources remaining at the resource location. it should be decremented by every creature that follows it while not carryingResource. 

20250502
testing this new behaviour - where the explored number is only updated if the new number is lower than the existing number, 
creature will travel in its preferred direction, prefering unexplored tiles, if it hits a dead end it retraces its steps, moving to any unexplored tiles if possible, else it moves to the lowest existing explored number it is adjacent to, if it returns all the way to the base then it will just move back and forth and become stuck, so when it reaches the base i should clear the dead end flag so it can explore again, returning to the base in this way could mean that its path was a complete dead end, but not necessarily, there could still be unexplored tiles, and also the map could have been altered. however i could slightly rotate its preferred direction, this way even if there is only one creature it would eventually map out the whole map just as well as multiple creatures. 

this is better, creatures now reset their dead end flag when returning to base, and are given a random new preferred direction. 

i still have the problem, there is a resource close to the base, so close that the creatures form and unbroken chain from the base to the resource, and they are all in each other's way. i have not actually implemented the resource marker being an int instead of a bool yet, so do that and test again

20250513
today i will change the resoure marker from a bool to an int 
need to amend the refineAdjacent method

the old system was, accidentally reach a resource, return to base, marking every step as a resource marker. 
then if you go back to the resource but it is depleted, we should unmark those, - it looks like i never actually implemented that. 

the new system, should accidentally reach a resource, count how many resources there are and try and take one, on the way back to base, mark each tile visited with the resource marker integer equal to the resources remaining, 
then when a creature follows the resource trail, hoping to get a resource, it lowers the value of the resource marker by 1. so if there were 9 left, and 9 creatures take off following that already discovered resource trail, they will reduce it to 0, and no more creatures will bother prioritising that path, however, if some of those are killed halfway, the resource marker for the path would still be 0, but there would still be resources left. in this case a creature could randomly discover the resource again, or if one does make it back it will be setting the resource marker as it goes with however many resources were left at the time it picked one up. 

this creates a new thing to think about, if a creature dies holding a resource, it is dropped, the next creautre on the way back to base already holding a resource might see this, what should it do? should it increase the resource number that it's laying down? 

what if 10 resources are discovered, so 10 creatures set off to find it, the first one to get there comes back recording that there are 9 left on each tile on the way back, but coming the other way are some more creatures, they are reducing the recorded number because they intend to collect a resource, the first one on the way back will be overwritting these with a higher number. 

so there are 2 ways to update the resource marker
option A) reducing the number as creatures follow the path, and option B) setting the number based on how many resources are remaining  - these 2 options are sort of conflicting with each other. 

A) is good assuming no creatures die, it will send the right amount of creatures for the resource, but if the path becomes blocked or some creatures die it will think the resource has been collected. and will only return there accidentally. 
B) will send potentially unlimited creatures down the same path until one comes back confirming there is no resources left, not good for a large map, not a big deal on a small map, also it deals with creatures dying better, or the map changing, it deal with that better too. 

using both together B) will overwrite A) so even if you sent the right amount of creatures, once the first one returns to base, it will have reset the number on the path so it will still think there are some left

so maybe i should stick to A), do B) initially, specifically that should mean if the resource was previously undiscovered - i.e. the path leading up to it did not already have resource markers on it - then the creature returns to base laying down a resource marker equal to the number remaining. then the way i can make A) better, creatures can detect dead creatures, i wanted that feature anyway, reporting the loss of a creature should be a priority, it should pick up the creature's resource if possible, then return to base laying a danger marker, once it reaches the base the danger is detected and strong units will follow that path 

i did say i wanted to send a number of creatures equal to the number of resources remaining after that creature takes one, but maybe increase the number by 1 or 2 just so a couple of creatures continue to that spot even after it's depleted to see if there was anything else in that area. 

the danger markers should be similar, resource collecting creatures should not want to follow that path because there is danger, but if some strong units follow that way they should reduce the number, which in effect means that resource gathering creatures will follow behind the strong ones. if the resource collecting creature encounters deceased strong creatures, the danger amount should be increased. 

so i want to get rid of the depleted marker 

creating a console log to explain the controls

this has certainly changed the behaviour, seems to be for the better, but i have not tested it properly, need to see if the variables are changing as they are expected to like the noOfResourcesDiscovered and the resource markers

TODO when a creature dies, it needs to drop its resource, that might mean adding a new resource index to the map, or adding to an exisiting one . i also need to have creatures detect dead creatures, so i need to make a bloodstain marker or something on the map

20250705
once the creatures gather all resources they don't explore the rest of the map, the go up to bits they have explored before, but no further. one creature index number 5, eventually breaks out and explores some but it loops around back to explored territory, but as it's dead end flag is set to true it ends up stuck going back and forth between 2 tiles as they are the lowest explored numbers. maybe when dead end is true, i should only move to the lowest explored neighbour if it is lower than the creature's tile's explored number, if we are on the lowest already then maybe set dead end to false? no i think something else is wrong here, it gets to a explored number that is 6, then there is no lower number, how is that possible? the explored number that should be 5 is 27, when did that happen? i was supposed to only update the explored number if we have a new lower number, fixed that - there was a typo, this does make the behaviour different.

the way the resource markers work is not right, i think we should only be putting these down when we are following a path back to the base, it seems that creature 5 gets to the resource when it is depleted, then keeps going past the resource laying resource markers?  i think, it needs more testing. i think this is why creature 5 is dancing around the depleted resource, it's running a counter down to 0 i think which is not the intended behaviour 

20250706
i will display the resource mark to screen on mouseover, i've discovered that the resource has a marker set to true , it was supposed to be a number wasn't it? fixed that
so if a creature picks up a resource, it should count how many are left, every step it takes towards the base it should put a resource marker equal to how many are left, if the creature stumbles upon additional resources on the way back, it will try to pick them up, count how many remain, and add that to the resource marker number it is laying down. 
example, 
creature goes to the resource, takes one, there are 3 left, it retraces its steps back to the base laying a resource marker equal to 3. it gets to the base, drops the resource, and follows its own resource marker back, as it does so it lowers the 3 to an 2 all the way back to the resource, that way if 3 more creatures see this trail, only 2 will bother following it, as they known there are only 2 resources. our creature reaches the resource again, takes one so there are 2 left, this time since it is already discovered, it will not lay a trail, after initial discovery responsibility for editing the trail falls to creatures travelling to the resource - not from. so on the way back it does not interact with the trail, just follows it. suddenly the creature is killed! it drops the resource. later a creature discovers the 2 trail, it reduces it to 1 as it follows it, it then discovers the dead creature and its dropped resource, it picks it up and take it home, the trail is now on 1 up to where that creature died, then 2 from that point onwards, and there are still 2 left at the resource's original location. a creature finds the 1 trail and follows it, reducing it to 0 as it does, it gets to the point where the creature was killed, the trail goes from being 1 to 2 here, the creature decrements the 2 trail to a 1 trail, all the way to the resource, picks one up now there is 1 left. it returns to base doing nothing to the 1 trail, but as it gets to where that creature was killed the trail is now 0, so it reverts to the sort of initial resource discovery state, and records that there is still 1 resource left, it now lays a new trail saying 1 all the way back to the base. 

example 
there is a resource pool to the north of the base, a creature discovers it, there are 10 resources left there. there is another resource pool north east of the base, a different creature simultaneously discovers it, there are 30 resources there, they both head back to base and their paths converge. the northern creature goes first, it lays a trail saying there are 10 resources left, the north east creature lays a trail of 30 up to the convergence, but then just follows the path back. so the trail from the base will look like it only has 10 resources, but when you get to the fork you discover there are actually 40 in total. 
now what should my creatures prioritise? deplete the 10 resource to clear that trail and allow the creatures to lay down the 30 trail? prioritise the 30 resource pool because it's bigger, and they want to get it before the enemy does? should i record how far away the resource is, and prioritise the closest? 
either way i should still have creatures follow 0 trails just to double check if there are any resources remaining, as there could be a fork like this example- and that would allow them to rediscover it, or there could be a dead creature holding a resource. only when it is reduced to -1 should they then ignore it. 

so to implement that, the creature needs to count how many resources there are after it tries to take one, it should return home, if the tile current resource marker is -1 then it shold be  laying a resource marker equal to the number of resources remaining, else do not edit it. if a creature follows a resource trail then it should decrement it. and creatures should follow trails even if the trail is 0, only when it is -1 do they not follow it

20250707
implemented the above change to the resource marker trails 
make it so that when the creature dies it drops the carried resource, so i need to add that resource to the map, which means i need a new method in case 2 resources get dropped on the same tile, they should add together instead of create 2 new resources. 

need to decrement the resourcemakrer when you pick up a resource, this has fixed the behaviour of creature 5, which repeatedly visited the depleted resource over and over

this seems to work well. 

TODO creatures will stop dead when they come to a player or vehicle, they should treat them like a wall, or attack or push or pick up the player or vehicle, not decided yet

20250708
today i will test the creature movement and it picking up resources, start by making a new map
i need to decrement the resourcemarker as i drop off the resource

this all seems to work together quite well so far. 

TODO other things i can do next is kill the creatures, i've half made the kill method of the creature, that resets some variables doubtless i've forgotten some. 
a killed creature should drop its resources and carried rubble in its trailers if possible, it should mark that position on the map as having one more resource than it used to if possible. it should mark a blood stain on the map that other creatures will react to. 
when new creatures are created they will reuse the dead creature's position in the creatures array, so i need to make sure i've reset all the appropriate values. 
so i need a kill button for the creature to test it out and i need a make creature button to test out new creature creation. 
if a creature dies and drops a trailer of rubble, if that trailer was already on rubble then it would make a wall, if there was a creature there then it should be killed - buried in the wall

on discovery of a dead creature the creature should retreat, going back to the creature base, it should also lay a 'warning' trail, any creature that sees this warning trail or dead body should follow it back to the base. or at least go in a different direction, so basically it will oppose going in the direction of the warning trail, unless that warning trail is lower than the warning trail it is on. when at the base it should raise the alarm and the base will produce a warrior creature, the regular, lets call them worker creatures will not follow that warning trail, they will disperse. the warrior will follow the warning trail to the site of the dead body, it will not edit the warning trail as it goes, but it should lay a reinforcing trail, if the reinforcing trail is equal to the warning trail then workers can follow the reinforcing trail to check if everything is ok. when the warrior arrives at the site of the dead creature it will patrol, methodically exploring a set distance from the site. when it starts covering the same ground it will cancel the patrol and return to the base deleting the warning trail and reinforcing trails. if the warrior defeats an enemy it will do an extra patrol until no enemies are found, then it will cancel the patrol. if the warrior is killed that will also count as a dead body, as i said earlier workers can follow the warning/ reinforcing trail so long as the warning number is less than or equal to the reinforcing number, so a worker creature can check on the warrior and report back if it is dead, it will report a higher warning number this time, producing extra warriors, and it will escalate this way until the creature base cannot produce sufficient warriors to take on the threat. produced warriors will need to know how many fellow warriors are nearby so they know to go take on the threat, they should patrol around the base and new warriors should roar so that the nearby warriors can count how many other warriors there are, when they know there are enough they should do a different roar and head off following the warning trail. if in their patrol they encounter a lower warning trail they will follow that. if it never produces enough warriors there will just be a load of warriors patrolling the base, and no workers are even going to visit that warning trail again. 

additionally i think it would be helpful for the creatures to display speech bubbles to display to the player what behaviour they are doing, so when they pick up a resource, when they are laying a trail, when they find a dead end, when they drop off a resource, when they edit a trail, when they detect a dead creature, when they are waiting for backup

20250709
working on the kill method of the creature, need to remove the creature index from the map
need to have an alive bool, a lot of the times i loop over the creatures array, i need to check if it is alive, i also need a list of dead creatures, so i can reuse them 
put some of the variable from the constructor for creature into a reset method, to make it easier to reset them when i reuse the creature, needed to add it to the priority array when reused too

this seems to work, if i add a new creature it will add a new creature to the array, but if i kill one, then add one back in, it will reuse that space in the array, seems to work ok, and it hopefully doesn't have any of the old creature's data like proposed pos etc

if a creature finds a resource it will follow resource markers back to the base. but if a creature picks up the first resource and is starting to lay a trail back to the base, but then dies, then the next creature that finds it will pick up the resource and the only resource marker trail will be back to the resource, so it will keep going to the resource even though it already has a resource, the discovering a dead creature logic will have to override this. alternatively i could set a flag on the resource when it is dropped, saying it's newlyDiscovered, if the creature picks up the dropped resource and sees the newly discovered flag, it should not follow the resource trail, it should follow the lowest explored tiles
reference //problem:newlyDiscovered

this seems to work next time sort out the dead creature logic as per yesterdays notes, 